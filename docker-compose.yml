version: '3.4'

services:
  ugc_api_service:
    build: ./ugc_api
    container_name: ugc_api_service
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    networks:
      - my_network

  ugc_nginx:
    image: nginx:latest
    container_name: ugc_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/nginx_config:/etc/nginx/conf.d:ro
      - nginx_log:/var/log/nginx/
    depends_on:
      - ugc_api_service
    ports:
      - "83:83"
    networks:
      - my_network

  kafka-0:
    image: bitnami/kafka:3.4
    ports:
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    networks:
      - my_network
   
    volumes:
      - kafka_0_data:/bitnami/kafka
   
  kafka-1:
    image: bitnami/kafka:3.4
    ports:
      - "9095:9095"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://127.0.0.1:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    networks:
      - my_network
   
    volumes:
      - kafka_1_data:/bitnami/kafka
   
  kafka-2:
    image: bitnami/kafka:3.4
    ports:
      - "9096:9096"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://127.0.0.1:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_2_data:/bitnami/kafka
    networks:
      - my_network

  etl:
    build: ./etl
    container_name: ugc_etl
    env_file:
      - .env
    volumes:
      - etl_log:/src/etl/logs
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
      - clickhouse-node1
    networks:
      - my_network

  kafka_to_mongo:
    build: ./kafka_to_mongo
    container_name: kafka_to_mongo
    env_file:
      - .env
    volumes:
      - mongo_etl_log:/src/kafka_to_mongo/logs
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
      - mongo_db
    networks:
      - my_network

  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - my_network

  clickhouse-node1:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse_data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - my_network

  clickhouse-node2:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./clickhouse_data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - my_network

  clickhouse-node3:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./clickhouse_data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - my_network

  clickhouse-node4:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    ports:
      - "8126:8123"
      - "9003:9000"
    volumes:
      - ./clickhouse_data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - my_network

  mongo_db:
    image: mongo
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      - my_network

  ugc_tests:
    build: ./tests/functional
    container_name: ugc_tests
    depends_on:
      - ugc_api_service
      - kafka-0
      - kafka-1
      - kafka-2
    env_file:
      - .env
    networks:
      - my_network

  filebeat:
    image: elastic/filebeat:8.13.2
    volumes:
      - nginx_log:/var/log/nginx:ro
      - etl_log:/src/etl/logs:ro
      - mongo_etl_log:/src/kafka_to_mongo/logs:ro
      - ./elk-deploy/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - ugc_nginx
    command: ["--strict.perms=false"]
    networks:
    - my_network

volumes:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:
  etl_log:
  nginx_log:
  mongo_etl_log:

networks:
  my_network:
    external: True